(***************************************************************)
(*                        Reactive Asco                        *)
(*             http://reactiveml.org/reactive_asco             *)
(*                                                             *)
(*                                                             *)
(*  Authors: Guillaume Baudart (guillaume.baudart@ens.fr)      *)
(*           Louis Mandel (louis.mandel@lri.fr)                *)
(*                                                             *)
(***************************************************************)

(** Dummy tools for all other files. *)

open Types
open Lexing
open Network

(** Alias for the last emission on event [s]. *)
let last_one s =
  let l = last ? s in
  match l with
  | [ ] -> assert false
  | [ x ] -> x
  | x :: _ -> prerr_endline "Warning: the player is too fast!"; x

(** Convert delays of the instrumental score into dates. *)
let delay_to_date l =
  let rec aux d l =
    match l with
    | [ ] -> [ ]
    | h :: t -> (d +. h) :: aux (d +. h) t
  in
  0. :: aux 0. l

(** Return the position of the parsing error. *)
let localisation pos file =
  let l = pos.pos_lnum in
  let c = pos.pos_cnum - pos.pos_bol + 1 in
  print_string ("File "^file^",  line ");
  print_string (string_of_int l);
  print_string ", character ";
  print_string (string_of_int c);
  print_newline ()


(** Returns the instrumental part played at the tempo [tempo] given the
    instrumental score [is].
*)
let extract_instr is tempo =
  let rec aux i l =
    match l with
    | [] -> []
    | h::t -> (i, h *. 60. /. tempo, tempo)::(aux (i + 1) t)
  in
  aux 1 is
