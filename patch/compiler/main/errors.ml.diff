--- compiler/main/errors.ml	2017-10-10 15:45:19.000000000 -0400
+++ ../compiler/main/errors.ml	2017-10-10 15:45:19.000000000 -0400
@@ -1,4 +1,30 @@
-(* This file was errors.ml from Objective Caml *)
+(**********************************************************************)
+(*                                                                    *)
+(*                           ReactiveML                               *)
+(*                    http://reactiveML.org                           *)
+(*                    http://rml.inria.fr                             *)
+(*                                                                    *)
+(*                          Louis Mandel                              *)
+(*                                                                    *)
+(*  Copyright 2002, 2007 Louis Mandel.  All rights reserved.          *)
+(*  This file is distributed under the terms of the Q Public License  *)
+(*  version 1.0.                                                      *)
+(*                                                                    *)
+(*  ReactiveML has been done in the following labs:                   *)
+(*  - theme SPI, Laboratoire d'Informatique de Paris 6 (2002-2005)    *)
+(*  - Verimag, CNRS Grenoble (2005-2006)                              *)
+(*  - projet Moscova, INRIA Rocquencourt (2006-2007)                  *)
+(*                                                                    *)
+(**********************************************************************)
+
+(* file: errors.ml *)
+
+(* Warning: *)
+(* This file is based on the original version of errors.ml *)
+(* from the Objective Caml 3.07 distribution, INRIA        *)
+
+(* first modification: 2004-05-08  *)
+(* modified by: Louis Mandel *)
 
 (***********************************************************************)
 (*                                                                     *)
@@ -12,60 +38,44 @@
 (*                                                                     *)
 (***********************************************************************)
 
-(* $Id: errors.ml,v 1.25 2003/06/19 15:53:49 xleroy Exp $ *)
-
-(* WARNING: if you change something in this file, you must look at
-   opterrors.ml to see if you need to make the same changes there.
-*)
+(* $Id$ *)
 
 open Format
 
-(* Report an error *)
-
 let report_error ppf exn =
   let report ppf = function
-  | Lexer.Error(err, loc) ->
-      Location.print ppf loc;
-      Lexer.report_error ppf err
-  | Syntaxerr.Error err ->
-      Syntaxerr.report_error ppf err
-  | Pparse.Error ->
-      fprintf ppf "Preprocessor error"
-  | Env.Error err ->
-      Env.report_error ppf err
-  | Ctype.Tags(l, l') -> fprintf ppf
-      "In this program,@ variant constructors@ `%s and `%s@ \
-       have the same hash value.@ Change one of them." l l'
-  | Typecore.Error(loc, err) ->
-      Location.print ppf loc; Typecore.report_error ppf err
-  | Typetexp.Error(loc, err) ->
-      Location.print ppf loc; Typetexp.report_error ppf err
-  | Typedecl.Error(loc, err) ->
-      Location.print ppf loc; Typedecl.report_error ppf err
-  | Typeclass.Error(loc, err) ->
-      Location.print ppf loc; Typeclass.report_error ppf err
-  | Includemod.Error err ->
-      Includemod.report_error ppf err
-  | Typemod.Error(loc, err) ->
-      Location.print ppf loc; Typemod.report_error ppf err
-  | Translcore.Error(loc, err) ->
-      Location.print ppf loc; Translcore.report_error ppf err
-  | Translclass.Error(loc, err) ->
-      Location.print ppf loc; Translclass.report_error ppf err
-  | Translmod.Error(loc, err) ->
-      Location.print ppf loc; Translmod.report_error ppf err
-  | Symtable.Error code ->
-      Symtable.report_error ppf code
-  | Bytelink.Error code ->
-      Bytelink.report_error ppf code
-  | Bytelibrarian.Error code ->
-      Bytelibrarian.report_error ppf code
-  | Bytepackager.Error code ->
-      Bytepackager.report_error ppf code
-  | Sys_error msg ->
-      fprintf ppf "I/O error: %s" msg
-  | Warnings.Errors (n) ->
-      fprintf ppf "@.Error: %d error-enabled warnings occurred." n
-  | x -> fprintf ppf "@]"; raise x in
-
+    | Lexer.Error(err, loc) ->
+	Location.print ppf loc;
+	Lexer.report_error ppf err
+    | Syntaxerr.Error err ->
+	Syntaxerr.report_error ppf err
+
+    | Misc.Error -> ()
+    | Misc.Internal (loc,msg) ->
+	if loc = Location.none
+      	then fprintf ppf "@.Internal error: %s. \nPlease report it." msg
+	else
+	  fprintf ppf "@.%aInternal error: %s. \nPlease report it."
+	    Location.print loc msg
+    | Warnings.Errors (n) ->
+	fprintf ppf "@.Error: %d error-enabled warnings occurred." n
+    | x -> fprintf ppf "@]"; raise x
+  in
   fprintf ppf "@[%a@]@." report exn
+
+let unbound_main main =
+  eprintf "The main process \"%s\" is unbound" main;
+  raise Misc.Error
+
+let bad_type_main main main_ty =
+  eprintf
+    "The main process \"%s\" must have type unit process.\n"
+	  main;
+(*   Types_printer.output main_ty.Def_types.value_typ.Def_types.ts_desc; *)
+  raise Misc.Error
+
+let no_compile_itf filename =
+  eprintf "Error: Could not find the .rzi file for interface %s.rmli."
+    filename;
+  raise Misc.Error
+
