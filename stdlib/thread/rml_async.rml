(**********************************************************************)
(*                                                                    *)
(*                           ReactiveML                               *)
(*                    http://reactiveML.org                           *)
(*                    http://rml.inria.fr                             *)
(*                                                                    *)
(*                          Louis Mandel                              *)
(*                                                                    *)
(*  Copyright 2002, 2007 Louis Mandel.  All rights reserved.          *)
(*  This file is distributed under the terms of the Q Public License  *)
(*  version 1.0.                                                      *)
(*                                                                    *)
(*  ReactiveML has been done in the following labs:                   *)
(*  - theme SPI, Laboratoire d'Informatique de Paris 6 (2002-2005)    *)
(*  - Verimag, CNRS Grenoble (2005-2006)                              *)
(*  - projet Moscova, INRIA Rocquencourt (2006-2007)                  *)
(*                                                                    *)
(**********************************************************************)

(* file: rml_async.rml *)
(* created: 2013-07-22  *)
(* author: Louis Mandel *)

let safe_emit s v =
  Rml_async_body.exec_boi (fun () -> emit s v)

let exec term f x =
  Rml_async_body.spawn (fun () -> let v = f x in safe_emit term v)

let process proc_of_fun (f: 'a -> 'b) (x : 'a) =
  signal term default (Obj.magic () : 'b) gather (fun x y -> x) in
  exec term f x;
  await term (v) in
  v

let yield = Rml_async_body.yield
